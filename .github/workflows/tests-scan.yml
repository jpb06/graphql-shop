name: tests and sonarcloud scan

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, ready_for_review, synchronize, converted_to_draft]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v4.3.0
        with:
          main-branch-name: main

      - uses: pnpm/action-setup@v4.1.0

      - name: Setup node
        uses: actions/setup-node@v4.4.0
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'

      - name: Installing dependencies
        run: pnpm install --frozen-lockfile

      - name: Starting nx cloud CI
        run: pnpm exec nx-cloud start-ci-run

      - name: Linting
        run: pnpm exec nx affected --target=lint --parallel --max-parallel=3
        timeout-minutes: 10

      - name: Types checking
        run: pnpm exec nx affected --target=type-check --parallel --max-parallel=3
        timeout-minutes: 10

      - name: Tests
        # run: pnpm exec nx affected --target=test --parallel --max-parallel=3 --codeCoverage

        # Running all tests for now, otherwise we might have missing coverage for sonarcloud quality gate ):
        run: pnpm exec nx run-many --target=test --parallel --all --codeCoverage
        timeout-minutes: 10

      # - name: Check if coverage folder exists
      #   id: coverage-folder
      #   run: |
      #     if  [ -d ./coverage ]; then
      #       echo "::set-output name=exists::true"
      #     fi

      # - name: Installing lcov
      #   # Executing this only if coverage has evolved somewhere (nx affected)
      #   if: steps.coverage-folder.outputs.exists == 'true'
      #   run: sudo apt-get install -y lcov

      # - name: Merge coverage
      #   # Executing this only if coverage has evolved somewhere (nx affected)
      #   if: steps.coverage-folder.outputs.exists == 'true'
      #   run: find ./coverage -name "lcov.info" ! -size 0 | awk '$0="-a "$0' | xargs lcov -o ./coverage/lcov.info

      # - name: SonarCloud Scan
      #   # Executing this only if coverage has evolved somewhere (nx affected)
      #   if: steps.coverage-folder.outputs.exists == 'true'
      #   uses: sonarsource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Stopping nx cloud CI
        run: pnpm exec nx-cloud stop-all-agents

  agents:
    runs-on: ubuntu-latest
    name: Agent 1
    timeout-minutes: 60

    strategy:
      matrix:
        agent: [1, 2, 3]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v4.1.0

      - name: Setup node
        uses: actions/setup-node@v4.4.0
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'

      - name: Installing dependencies
        run: pnpm install --frozen-lockfile

      - name: Generating prisma models for Agent ${{ matrix.agent }}
        run: pnpm prisma-gen
        timeout-minutes: 5
        env:
          NX_CLOUD_DISTRIBUTED_EXECUTION: false

      - name: Start Nx Agent ${{ matrix.agent }}
        run: pnpm exec nx-cloud start-agent
