# base node image
FROM node:22-bullseye-slim as base

# Install dependencies
RUN apt-get update && apt-get install -y openssl make g++ gcc python3
RUN npm --silent install --global --depth 0 pnpm nx prisma

# set for base and all that inherit from it
ENV NODE_ENV=production

# Install all node_modules, including dev dependencies
FROM base AS deps

RUN mkdir /app
WORKDIR /app

ADD ./package.json ./pnpm-lock.yaml ./
ADD ./libs/backend/database/model/schema.prisma ./libs/backend/database/model/schema.prisma
RUN pnpm i --prod=false

# Build the app
FROM base AS build

RUN mkdir /app
WORKDIR /app

COPY --from=deps /app/node_modules /app/node_modules
ADD . .

RUN NX_DAEMON=false pnpm nx run back-api-app:build:production

# Finally, build the production image with minimal footprint
FROM base

ENV NODE_ENV=production

RUN mkdir /app
WORKDIR /app

COPY --from=deps /app/node_modules /app/node_modules
COPY --from=build /app/node_modules/@prisma /app/node_modules/@prisma
COPY --from=build /app/node_modules/.pnpm /app/node_modules/.pnpm
COPY --from=build /app/dist /app/dist
ADD . .

COPY ./apps/api/start-with-migrations.sh /
RUN chmod +x /start-with-migrations.sh
ENTRYPOINT ["/start-with-migrations.sh"]
